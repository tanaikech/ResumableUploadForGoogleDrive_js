"use strict";(function(e){let t;t=function(){function e(){this.obj={},this.chunkSize=52428800,this.partsOfChunks=10,this.endpoint="https://www.googleapis.com/upload/drive/v3/files?uploadType=resumable&supportsAllDrives=true"}e.prototype.Do=async function(e,i){i({status:"initialize"},null);try{this.obj=await t.call(this,e)}catch(e){return void i(null,e)}const r=new Uint8Array(this.obj.resource.fileBuffer),a=n.call(this),l=a.chunks.map(function(e){return{data:r.slice(e.startByte,e.endByte+1),length:e.numByte,range:"bytes "+e.startByte+"-"+e.endByte+"/"+a.total,startByte:e.startByte,endByte:e.endByte,total:a.total}});try{const e=await s.call(this);this.location=e.get("location"),i({status:"getLocation"},null),o.call(this,l,function(e,t){t?i(null,t):i(e,null)})}catch(e){return void i(null,e)}};const t=function(e){return new Promise((t,n)=>{if(!("accessToken"in e&&"fileName"in e&&"fileSize"in e&&"fileType"in e&&"fileBuffer"in e))return void n({Error:"There are no required parameters. accessToken, fileName, fileSize, fileType and fileBuffer are required."});let s={};s.resource=e,"chunkSize"in e&&e.chunkSize>=262144&&e.chunkSize%262144==0&&(this.chunkSize=e.chunkSize),"partsOfChunks"in e&&e.partsOfChunks<=20&&e.partsOfChunks===parseInt(e.partsOfChunks,10)&&(this.partsOfChunks=e.partsOfChunks),"fields"in e&&""!=e.fields&&(this.endpoint+="&fields="+encodeURIComponent(e.fields)),"convertToGoogleDocs"in e&&e.convertToGoogleDocs?fetch("https://www.googleapis.com/drive/v3/about?fields=importFormats",{method:"GET",headers:{Authorization:"Bearer "+e.accessToken}}).then(o=>{200==o.status?o.json().then(n=>{e.fileType in n.importFormats&&(s.resource.fileType=n.importFormats[e.fileType][0]),t(s)}):o.json().then(e=>n(e))}).catch(e=>{n(e)}):t(s)})},n=function(){const e=this.chunkSize,t=this.obj.resource.fileSize;let n={};n.total=t,n.chunks=[];let s=t>e?e:262144*Math.ceil(t/(262144*this.partsOfChunks));const o=function(e,t){const n=e%t;return 0==n?0:n}(t,s),i=Math.floor(t/s);for(let e=0;e<=i;e++){const t=e*s;let r={};r.startByte=t,e<i?(r.endByte=t+s-1,r.numByte=s,n.chunks.push(r)):e==i&&o>0&&(r.endByte=t+o-1,r.numByte=o,n.chunks.push(r))}return n},s=function(){return new Promise((e,t)=>{const n=this.obj.resource,s=n.accessToken;let o={mimeType:n.fileType,name:n.fileName};"folderId"in n&&""!=n.folderId&&(o.parents=[n.folderId]),fetch(this.endpoint,{method:"POST",body:JSON.stringify(o),headers:{Authorization:"Bearer "+s,"Content-Type":"application/json"}}).then(n=>{200==n.status?e(n.headers):n.json().then(e=>t(e))}).catch(e=>{t(e)})})},o=function(e,t){t({status:"start"},null);const n=this.location,s=e.length;let o=0;const i=function(o){const r=e[o];t({status:"Uploading",progressNumber:{current:o,end:s},progressByte:{current:r.startByte,end:r.endByte,total:r.total}},null),fetch(n,{method:"PUT",body:r.data,headers:{"Content-Range":r.range}}).then(e=>{const n=e.status;if(o+=1,308==n)i(o);else{if(200!=n)return void e.json().then(e=>{e.additionalInformation="When the file size is large, there is the case that the file cannot be converted to Google Docs. Please be careful this.",t(null,e)});e.json().then(e=>t({status:"Done",result:e},null))}}).catch(e=>{t(null,e)})};i(o)};return e}(),e.ResumableUploadToGoogleDrive=t})(this);